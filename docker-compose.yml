version: "3.8"

services:
  db:
    image: postgres:13
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: app
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - ./.env
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  adminer:
    image: adminer:latest
    restart: always
    expose:
      - "8080"
    networks:
      - app-network

  npm:
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    environment:
      - DB_SQLITE_FILE=/data/database.sqlite
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  npm_data:
  npm_letsencrypt:
